AWSTemplateFormatVersion: 2010-09-09
Description: Stack for Solution Helper resources.
Parameters:
  ResourceName:
    Type: String
    Description: |
      Used to name resources created as part of this stack (and inside nested stacks too).
      Can be the same as the stack name used by AWS CloudFormation, but this field has extra
      constraints because it's used to name resources with restrictions (e.g. Amazon S3 bucket
      names cannot contain capital letters).
    AllowedPattern: '^[a-z0-9\-]+$'
    ConstraintDescription: 'Only allowed to use lowercase letters, hyphens and/or numbers.'
  S3BucketName:
    Description: Amazon S3 Bucket used to store datasets and schemas.
    Type: String
  SolutionsS3BucketName:
    Description: Amazon S3 Bucket containing solutions.
    Type: String
  ECRRepository:
    Description: Amazon ECR Repository used to store Amazon SageMaker images.
    Type: String
Resources:
  SolutionAssistant:
    Type: "Custom::SolutionAssistant"
    Properties:
      ServiceToken: !GetAtt SolutionAssistantLambda.Arn
      ResourceName: !Ref ResourceName
      S3BucketName: !Ref S3BucketName
      SolutionsS3BucketName: !Ref SolutionsS3BucketName
      ECRRepository: !Ref ECRRepository
  SolutionAssistantLambda:
    Type: AWS::Lambda::Function
    Properties:
      Handler: "lambda_function.handler"
      FunctionName: !Sub "${ResourceName}-solution-assistant"
      Role: !GetAtt SolutionAssistantLambdaRole.Arn
      Runtime: "python3.8"
      Code:
        S3Bucket: !Ref SolutionsS3BucketName
        S3Key: "Explaining-credit-decisions/build/solution-assistant.zip"
      Timeout : 60
  SolutionAssistantLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        -
          PolicyName: ReadFromSolutionsS3Bucket
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - s3:ListBucket
              Resource:
                - !Sub "arn:aws:s3:::${SolutionsS3BucketName}"
            - Effect: Allow
              Action:
                - s3:GetObject
              Resource:
                - !Sub "arn:aws:s3:::${SolutionsS3BucketName}/*"
            - Effect: Allow
              Action:
                - s3:ListBucket
              Resource:
                - !Sub "arn:aws:s3:::${S3BucketName}"
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:PutObject
                - s3:DeleteObject
                - s3:AbortMultipartUpload
              Resource:
                - !Sub "arn:aws:s3:::${S3BucketName}/*"
            - Effect: Allow
              Action:
                - sagemaker:DeleteModel
              Resource:
                - !Sub "arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:model/*"
            - Effect: Allow
              Action:
                - sagemaker:DeleteEndpointConfig
              Resource:
                - !Sub "arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:endpoint-config/*"
            - Effect: Allow
              Action:
                - sagemaker:DeleteEndpoint
              Resource:
                - !Sub "arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:endpoint/*"
                - !Sub "arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:endpoint-config/*"
            - Effect: Allow
              Action:
                - ecr:DescribeImages
                - ecr:BatchDeleteImage
              Resource:
                - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${ECRRepository}"
