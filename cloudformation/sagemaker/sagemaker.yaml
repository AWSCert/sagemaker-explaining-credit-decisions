AWSTemplateFormatVersion: '2010-09-09'
Description: Stack for Amazon SageMaker resources.
Parameters:
  SolutionPrefix:
    Type: String
    Description: |
      Used to name resources created as part of this stack (and inside nested stacks too).
      Can be the same as the stack name used by AWS CloudFormation, but this field has extra
      constraints because it's used to name resources with restrictions (e.g. Amazon S3 bucket
      names cannot contain capital letters).
    AllowedPattern: '^[a-z0-9\-]+$'
    ConstraintDescription: 'Only allowed to use lowercase letters, hyphens and/or numbers.'
  StackVersion:
    Description: CloudFormation Stack version.
    Type: String
    AllowedValues: 
      - release
      - development
  S3BucketName:
    Description: Amazon S3 Bucket used to store datasets and schemas.
    Type: String
  GlueDatabase:
    Description: AWS Glue Database name used as a catalogue for dataset tables.
    Type: String
  GlueWorkflow:
    Description: AWS Glue Workflow name used to perform dataset crawl and Glue Job for ETL.
    Type: String
  SolutionsS3BucketName:
    Description: Amazon S3 Bucket containing solutions.
    Type: String
  CreateSageMakerNotebookInstance:
    Description: Create a SageMaker Notebook Instance as part of the stack?
    Type: String
    AllowedValues: 
      - 'true'
      - 'false'
  SageMakerNotebookInstanceType:
    Description: Amazon SageMaker Notebook instance type.
    Type: String
Conditions:
  StackDevelopment: !Equals [!Ref StackVersion, development]
  CreateSageMakerNotebookInstance: !Equals [ !Ref CreateSageMakerNotebookInstance, 'true' ]
Resources:
  SageMakerExecutionIAMRole:
    Type: AWS::IAM::Role
    Condition: CreateSageMakerNotebookInstance
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - sagemaker.amazonaws.com
                - !If [StackDevelopment, 'ec2.amazonaws.com', 'sagemaker.amazonaws.com']
            Action:
              - 'sts:AssumeRole'
      RoleName: !Sub ${SolutionPrefix}-${AWS::Region}-execution-role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: Using explicit name to restrict permissions
  SageMakerExecutionIAMPolicy:
    Type: AWS::IAM::Policy
    Condition: CreateSageMakerNotebookInstance
    Properties:
      PolicyName: !Sub ${SolutionPrefix}-${AWS::Region}-execution-policy
      Roles:
        - !Ref SageMakerExecutionIAMRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Resource:
              - !GetAtt SageMakerIAMRole.Arn
          - Effect: Allow
            Action:
              - cloudwatch:PutMetricData
              - cloudwatch:GetMetricData
              - cloudwatch:GetMetricStatistics
              - cloudwatch:ListMetrics
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:DescribeLogStreams
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/sagemaker/*"
          - Effect: Allow
            Action:
              - logs:GetLogEvents
              - logs:PutLogEvents
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/sagemaker/*:log-stream:*"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W12
            reason: |
              A number of actions are resource agnostic, so '*' is used.
              See 'logs:CreateLogGroup' as an example.
  SageMakerIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub "arn:aws:iam::${AWS::AccountId}:root"
              Service:
                - "sagemaker.amazonaws.com"
            Action:
              - 'sts:AssumeRole'
      RoleName: !Sub ${SolutionPrefix}-${AWS::Region}-sagemaker-role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: Using explicit name to restrict permissions
  SageMakerIAMPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${SolutionPrefix}-${AWS::Region}-sagemaker-policy
      Roles:
        - !Ref SageMakerIAMRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - sagemaker:ListTrainingJobs
              - sagemaker:ListModels
            Resource:
              - '*'
          - Effect: Allow
            Action:
              - sagemaker:CreateTransformJob
              - sagemaker:DescribeTransformJob
            Resource:
              - !Sub "arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:transform-job/*"
          - Effect: Allow
            Action:
              - sagemaker:CreateTrainingJob
              - sagemaker:DescribeTrainingJob
              - sagemaker:ListTags
            Resource:
              - !Sub "arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:training-job/*"
          - Effect: Allow
            Action:
              - sagemaker:CreateModel
              - sagemaker:DeleteModel
            Resource:
              - !Sub "arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:model/*"
          - Effect: Allow
            Action:
              - sagemaker:DescribeEndpointConfig
              - sagemaker:CreateEndpointConfig
              - sagemaker:DeleteEndpointConfig
            Resource:
              - !Sub "arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:endpoint-config/*"
          - Effect: Allow
            Action:
              - sagemaker:CreateEndpoint
              - sagemaker:DescribeEndpoint
              - sagemaker:DeleteEndpoint
              - sagemaker:InvokeEndpoint
              - sagemaker:UpdateEndpoint
            Resource:
              - !Sub "arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:endpoint/*"
              - !Sub "arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:endpoint-config/*"
          - Effect: Allow
            Action:
              - cloudwatch:PutMetricData
              - cloudwatch:GetMetricData
              - cloudwatch:GetMetricStatistics
              - cloudwatch:ListMetrics
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:DescribeLogStreams
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/sagemaker/*"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
          - Effect: Allow
            Action:
              - logs:GetLogEvents
              - logs:PutLogEvents
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/sagemaker/*:log-stream:*"
          - Effect: Allow
            Action:
              - logs:GetLogEvents
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*:log-stream:*"
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource:
              - !GetAtt SageMakerIAMRole.Arn
            Condition:
              StringEquals:
                iam:PassedToService: sagemaker.amazonaws.com
          # Can get the IAM Role
          - Effect: Allow
            Action:
              - iam:GetRole
            Resource:
              - !GetAtt SageMakerIAMRole.Arn
          # Can list the contents of the SageMaker Solutions Amazon S3 Bucket
          - Effect: Allow
            Action:
              - s3:ListBucket
            Resource:
              - !Sub "arn:aws:s3:::${SolutionsS3BucketName}"
          # Can get objects from the SageMaker Solutions Amazon S3 Bucket
          - Effect: Allow
            Action:
              - s3:GetObject
            Resource:
              - !Sub "arn:aws:s3:::${SolutionsS3BucketName}/*"
          # Can list the contents of the Explaining Credit Decisions Amazon S3 Bucket
          - Effect: Allow
            Action:
              - s3:ListBucket
            Resource:
              - !Sub "arn:aws:s3:::${S3BucketName}"
          # Can get objects from the Explaining Credit Decisions Amazon S3 Bucket
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              - s3:AbortMultipartUpload
            Resource:
              - !Sub "arn:aws:s3:::${S3BucketName}/*"
          # Can upload a custom image to the Explaining Credit Decisions Amazon ECR Repository
          - Effect: Allow
            Action:
              - ecr:GetAuthorizationToken
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - ecr:CompleteLayerUpload
              - ecr:UploadLayerPart
              - ecr:InitiateLayerUpload
              - ecr:PutImage
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:BatchCheckLayerAvailability
              - ecr:DescribeImages
              - ecr:BatchDeleteImage
            Resource:
              - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${ECRRepository}"
              - !Sub "arn:aws:ecr:${AWS::Region}:*:repository/sagemaker-scikit-learn"
          # Can start and get status of AWS Glue Workflows.
          - Effect: Allow
            Action:
              - glue:StartWorkflowRun
              - glue:GetWorkflowRun
            Resource:
              - "*"
          # Can get get tables from the AWS Glue Database.
          - Effect: Allow
            Action:
              - glue:GetTable
              - glue:GetTables
            Resource:
              - !Sub "arn:aws:glue:${AWS::Region}:${AWS::AccountId}:catalog"
              - !Sub "arn:aws:glue:${AWS::Region}:${AWS::AccountId}:database/${GlueDatabase}"
              - !Sub "arn:aws:glue:${AWS::Region}:${AWS::AccountId}:table/*"
          - Effect: Allow
            Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
            Resource:
              - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${ContainerBuildProject}"
              - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:build/*"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W12
            reason: |
              A number of actions are resource agnostic, so '*' is used.
              See 'logs:CreateLogGroup' as an example.
          - id: W76
            reason: |
              Simpler to keep as single policy for SageMaker resources
  SageMakerNotebookInstance:
    Type: AWS::SageMaker::NotebookInstance
    Condition: CreateSageMakerNotebookInstance
    Properties:
      DirectInternetAccess: Enabled
      InstanceType: !Ref SageMakerNotebookInstanceType
      LifecycleConfigName: !GetAtt SageMakerNotebookInstanceLifecycleConfig.NotebookInstanceLifecycleConfigName
      NotebookInstanceName: !Sub ${SolutionPrefix}-notebook
      RoleArn: !GetAtt SageMakerExecutionIAMRole.Arn
      VolumeSizeInGB: 120
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W1201
            reason: Solution does not have AWS KMS encryption enabled by default.
  SageMakerNotebookInstanceLifecycleConfig:
    Type: AWS::SageMaker::NotebookInstanceLifecycleConfig
    Condition: CreateSageMakerNotebookInstance
    Properties:
      NotebookInstanceLifecycleConfigName: !Sub ${SolutionPrefix}-lifecycle-config
      OnStart:
        - Content:
            Fn::Base64: |
              set -e
              # perform following actions as ec2-user
              sudo -u ec2-user -i <<EOF
              /home/ec2-user/anaconda3/envs/python3/bin/python /home/ec2-user/SageMaker/env_setup.py --force --log-level DEBUG
              EOF
      OnCreate:
        - Content:
            Fn::Base64: !Sub |
              set -e
              # perform following actions as ec2-user
              sudo -u ec2-user -i <<EOF
              echo "Adding to ~/.aws/config" 
              # assume role for aws cli (assumes ~/.aws/config already exists and has default profile)
              echo "role_arn = ${SageMakerIAMRole.Arn}" >> ~/.aws/config
              echo "credential_source = Ec2InstanceMetadata" >> ~/.aws/config
              cat ~/.aws/config
              cd /home/ec2-user/SageMaker
              echo "Copying source files" 
              aws s3 cp s3://${SolutionsS3BucketName}/Explaining-credit-decisions/sagemaker_notebook_instance/ . --recursive
              echo "Creating stack_outputs.json with stack resources that are required in notebook(s)" 
              touch stack_outputs.json
              echo '{' >> stack_outputs.json
              echo '  "AwsAccountId": "${AWS::AccountId}",' >> stack_outputs.json
              echo '  "AwsRegion": "${AWS::Region}",' >> stack_outputs.json
              echo '  "SolutionPrefix": "${SolutionPrefix}",' >> stack_outputs.json
              echo '  "S3Bucket": "${S3BucketName}",' >> stack_outputs.json
              echo '  "IamRole": "${SageMakerIAMRole.Arn}",' >> stack_outputs.json
              echo '  "GlueDatabase": "${GlueDatabase}",' >> stack_outputs.json
              echo '  "GlueWorkflow": "${GlueWorkflow}",' >> stack_outputs.json
              echo '  "EcrRepository": "${ECRRepository}",' >> stack_outputs.json
              echo '  "ContainerBuildProject": "${ContainerBuildProject}",' >> stack_outputs.json
              echo '  "SagemakerMode": "NotebookInstance"' >> stack_outputs.json
              echo '}' >> stack_outputs.json
              cat stack_outputs.json 
              EOF
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub ${SolutionPrefix}
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: Custom name is more descriptive.
  ContainerBuildIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - 'sts:AssumeRole'
      RoleName: !Sub ${SolutionPrefix}-${AWS::Region}-codebuild-role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: Using explicit name to restrict permissions
  ContainerBuildIAMPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${SolutionPrefix}-${AWS::Region}-codebuild-policy
      Roles:
        - !Ref ContainerBuildIAMRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - ecr:GetAuthorizationToken
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - ecr:CompleteLayerUpload
              - ecr:UploadLayerPart
              - ecr:InitiateLayerUpload
              - ecr:PutImage
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:BatchCheckLayerAvailability
              - ecr:DescribeImages
              - ecr:BatchDeleteImage
            Resource:
              - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${ECRRepository}"
              - !Sub "arn:aws:ecr:${AWS::Region}:*:repository/sagemaker-scikit-learn"
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:DescribeLogStreams
              - logs:GetLogEvents
              - logs:PutLogEvents
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
          - Effect: Allow
            Action:
              - s3:ListBucket
            Resource:
              - !Sub "arn:aws:s3:::${S3BucketName}"
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              - s3:AbortMultipartUpload
            Resource:
              - !Sub "arn:aws:s3:::${S3BucketName}/*"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W12
            reason: ecr:GetAuthorizationToken is resource agnostic, so '*' is used.
  ContainerBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${SolutionPrefix}-container-build"
      ServiceRole: !Ref ContainerBuildIAMRole
      Source:
        Type: S3
        Location: !Sub "${S3BucketName}/containers/model.zip"
      Environment:
        ComputeType: "BUILD_GENERAL1_MEDIUM"
        Image: "aws/codebuild/standard:4.0"
        Type: "LINUX_CONTAINER"
        PrivilegedMode: True
        EnvironmentVariables:
          - Name: "AWS_REGION"
            Value: !Ref AWS::Region
          - Name: "AWS_ACCOUNT"
            Value: !Ref AWS::AccountId
          - Name: "ECR_REPOSITORY"
            Value: !Ref ECRRepository
          - Name: "ECR_IMAGE"
            Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECRRepository}:latest"
      Artifacts:
        Type: "NO_ARTIFACTS"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W32
            reason: Overriding encryption requirements for codebuild
Outputs:
  SageMakerNotebookInstanceNotebooks:
    Description: URL to notebooks on the Amazon SageMaker Notebook Instance.
    Condition: CreateSageMakerNotebookInstance
    Value: !Sub "https://${SageMakerNotebookInstance.NotebookInstanceName}.notebook.${AWS::Region}.sagemaker.aws/tree/notebooks"
  ECRRepository:
    Description: Amazon ECR Repository
    Value: !Ref ECRRepository
  ContainerBuildProject:
    Description: CodeBuild Project for Docker container building
    Value: !Ref ContainerBuildProject
  SageMakerIAMRole:
    Description: Amazon SageMaker Solution IAM Role
    Value: !GetAtt SageMakerIAMRole.Arn